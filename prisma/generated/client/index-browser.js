
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserV2ScalarFieldEnum = {
  id: 'id',
  email: 'email',
  navn: 'navn',
  user_type: 'user_type',
  entra_id_object_id: 'entra_id_object_id',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at',
  tilknyttetSelskapId: 'tilknyttetSelskapId'
};

exports.Prisma.RoleV2ScalarFieldEnum = {
  id: 'id',
  role_name: 'role_name',
  description: 'description'
};

exports.Prisma.UserRoleV2ScalarFieldEnum = {
  user_id: 'user_id',
  role_id: 'role_id'
};

exports.Prisma.ModulScalarFieldEnum = {
  id: 'id',
  navn: 'navn',
  beskrivelse: 'beskrivelse'
};

exports.Prisma.UserModulTilgangScalarFieldEnum = {
  userId: 'userId',
  modulId: 'modulId'
};

exports.Prisma.SelskapScalarFieldEnum = {
  id: 'id',
  organisasjonsnummer: 'organisasjonsnummer',
  selskapsnavn: 'selskapsnavn',
  gateadresse: 'gateadresse',
  postnummer: 'postnummer',
  poststed: 'poststed',
  kontaktpersonNavn: 'kontaktpersonNavn',
  kontaktpersonTelefon: 'kontaktpersonTelefon',
  kundenummerWims: 'kundenummerWims',
  ramme: 'ramme',
  opprettetDato: 'opprettetDato',
  updated_at: 'updated_at',
  organisasjonsformBeskrivelse: 'organisasjonsformBeskrivelse',
  forretningsKommune: 'forretningsKommune',
  forretningsKommunenummer: 'forretningsKommunenummer',
  stiftelsesdato: 'stiftelsesdato',
  antallAnsatte: 'antallAnsatte',
  naeringskode1Beskrivelse: 'naeringskode1Beskrivelse',
  hjemmeside: 'hjemmeside'
};

exports.Prisma.GarantiProsjektScalarFieldEnum = {
  id: 'id',
  navn: 'navn',
  prosjektGateadresse: 'prosjektGateadresse',
  prosjektPostnummer: 'prosjektPostnummer',
  prosjektPoststed: 'prosjektPoststed',
  prosjektKommune: 'prosjektKommune',
  prosjektKommunenummer: 'prosjektKommunenummer',
  status: 'status',
  produkt: 'produkt',
  kommentarKunde: 'kommentarKunde',
  opprettetDato: 'opprettetDato',
  updated_at: 'updated_at',
  selskapId: 'selskapId',
  ansvarligRaadgiverId: 'ansvarligRaadgiverId',
  uwAnsvarligId: 'uwAnsvarligId',
  produksjonsansvarligId: 'produksjonsansvarligId'
};

exports.Prisma.GarantiSakHendelseScalarFieldEnum = {
  id: 'id',
  selskapId: 'selskapId',
  prosjektId: 'prosjektId',
  hendelseType: 'hendelseType',
  beskrivelse: 'beskrivelse',
  utfoertAvId: 'utfoertAvId',
  dato: 'dato'
};

exports.Prisma.GarantiSakDokumentScalarFieldEnum = {
  id: 'id',
  selskapId: 'selskapId',
  prosjektId: 'prosjektId',
  dokumentType: 'dokumentType',
  filnavn: 'filnavn',
  blobUrl: 'blobUrl',
  containerNavn: 'containerNavn',
  blobNavn: 'blobNavn',
  opplastetAvId: 'opplastetAvId',
  opplastetDato: 'opplastetDato'
};

exports.Prisma.GarantiSakInternKommentarScalarFieldEnum = {
  id: 'id',
  selskapId: 'selskapId',
  prosjektId: 'prosjektId',
  kommentar: 'kommentar',
  opprettet_av_id: 'opprettet_av_id',
  opprettet_dato: 'opprettet_dato'
};

exports.Prisma.DrawingRuleScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  created_by_user_id: 'created_by_user_id',
  last_updated_by_user_id: 'last_updated_by_user_id'
};

exports.Prisma.DrawingRuleVersionScalarFieldEnum = {
  id: 'id',
  ruleId: 'ruleId',
  versionNumber: 'versionNumber',
  content: 'content',
  createdAt: 'createdAt',
  isCurrent: 'isCurrent',
  metadata: 'metadata',
  created_by_user_id: 'created_by_user_id'
};

exports.Prisma.DrawingRuleImageScalarFieldEnum = {
  id: 'id',
  ruleVersionId: 'ruleVersionId',
  filename: 'filename',
  fileData: 'fileData',
  mimeType: 'mimeType',
  createdAt: 'createdAt',
  created_by_user_id: 'created_by_user_id'
};

exports.Prisma.SystemPromptsScalarFieldEnum = {
  id: 'id',
  prompt_type: 'prompt_type',
  prompt_text: 'prompt_text',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at',
  created_by_user_id: 'created_by_user_id'
};

exports.Prisma.InvoicesScalarFieldEnum = {
  id: 'id',
  file_name: 'file_name',
  status: 'status',
  uploaded_at: 'uploaded_at',
  processed_at: 'processed_at',
  extracted_text: 'extracted_text',
  extracted_json: 'extracted_json',
  pdf_data: 'pdf_data',
  error_message: 'error_message',
  feedback_rating: 'feedback_rating',
  feedback_comment: 'feedback_comment',
  registreringsnummer: 'registreringsnummer'
};

exports.Prisma.DashboardStatsScalarFieldEnum = {
  id: 'id',
  date: 'date',
  total_customers: 'total_customers',
  private_customers: 'private_customers',
  business_customers: 'business_customers',
  total_premium: 'total_premium',
  private_premium: 'private_premium',
  business_premium: 'business_premium',
  claims_reported_ytd: 'claims_reported_ytd',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ClaimCategoryScalarFieldEnum = {
  id: 'id',
  dashboard_stats_id: 'dashboard_stats_id',
  claim_category: 'claim_category',
  claim_count: 'claim_count',
  total_amount: 'total_amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TilbudScalarFieldEnum = {
  id: 'id',
  prosjektId: 'prosjektId',
  status: 'status',
  produkttype: 'produkttype',
  opprettetDato: 'opprettetDato',
  opprettetAv: 'opprettetAv',
  sistEndret: 'sistEndret',
  endretAv: 'endretAv',
  versjonsnummer: 'versjonsnummer'
};

exports.Prisma.TilbudsBeregningScalarFieldEnum = {
  id: 'id',
  tilbudId: 'tilbudId',
  kontraktssum: 'kontraktssum',
  startDato: 'startDato',
  sluttDato: 'sluttDato',
  utforelsestid: 'utforelsestid',
  garantitid: 'garantitid',
  rentesatsUtforelse: 'rentesatsUtforelse',
  rentesatsGaranti: 'rentesatsGaranti',
  etableringsgebyr: 'etableringsgebyr',
  totalPremie: 'totalPremie',
  manueltOverstyrt: 'manueltOverstyrt',
  opprettetDato: 'opprettetDato',
  sistEndret: 'sistEndret'
};

exports.Prisma.BenefisientScalarFieldEnum = {
  id: 'id',
  tilbudId: 'tilbudId',
  type: 'type',
  navn: 'navn',
  organisasjonsnummer: 'organisasjonsnummer',
  personident: 'personident',
  andel: 'andel',
  kontaktinformasjon: 'kontaktinformasjon',
  opprettetDato: 'opprettetDato',
  sistEndret: 'sistEndret'
};

exports.Prisma.ProduktKonfigurasjonScalarFieldEnum = {
  id: 'id',
  produktnavn: 'produktnavn',
  standardUtforelseProsent: 'standardUtforelseProsent',
  standardGarantiProsent: 'standardGarantiProsent',
  standardGarantitid: 'standardGarantitid',
  maksKontraktssum: 'maksKontraktssum',
  aktiv: 'aktiv',
  opprettetDato: 'opprettetDato',
  sistEndret: 'sistEndret'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.GarantiProsjektStatus = exports.$Enums.GarantiProsjektStatus = {
  Ny: 'Ny',
  Tildelt: 'Tildelt',
  Behandles: 'Behandles',
  Avslaatt: 'Avslaatt',
  Godkjent: 'Godkjent',
  AvventerGodkjenningUW: 'AvventerGodkjenningUW',
  KlarTilProduksjon: 'KlarTilProduksjon',
  Produsert: 'Produsert'
};

exports.TilbudStatus = exports.$Enums.TilbudStatus = {
  Utkast: 'Utkast',
  TilBehandling: 'TilBehandling',
  Godkjent: 'Godkjent',
  Avslatt: 'Avslatt',
  Produsert: 'Produsert',
  Utlopt: 'Utlopt'
};

exports.BenefisientType = exports.$Enums.BenefisientType = {
  Juridisk: 'Juridisk',
  Fysisk: 'Fysisk'
};

exports.Prisma.ModelName = {
  UserV2: 'UserV2',
  RoleV2: 'RoleV2',
  UserRoleV2: 'UserRoleV2',
  Modul: 'Modul',
  UserModulTilgang: 'UserModulTilgang',
  Selskap: 'Selskap',
  GarantiProsjekt: 'GarantiProsjekt',
  GarantiSakHendelse: 'GarantiSakHendelse',
  GarantiSakDokument: 'GarantiSakDokument',
  GarantiSakInternKommentar: 'GarantiSakInternKommentar',
  DrawingRule: 'DrawingRule',
  DrawingRuleVersion: 'DrawingRuleVersion',
  DrawingRuleImage: 'DrawingRuleImage',
  SystemPrompts: 'SystemPrompts',
  Invoices: 'Invoices',
  DashboardStats: 'DashboardStats',
  ClaimCategory: 'ClaimCategory',
  Tilbud: 'Tilbud',
  TilbudsBeregning: 'TilbudsBeregning',
  Benefisient: 'Benefisient',
  ProduktKonfigurasjon: 'ProduktKonfigurasjon'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
